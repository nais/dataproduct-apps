name: Create docker image

on:
  push:

env:
  "BASEIMAGE": "ghcr.io/${{ github.repository }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: "Set image version"
      id: set-image-tag
      run: |
        export IMAGE_TAG="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        echo "::set-output name=image::${BASEIMAGE}:${IMAGE_TAG}"
    - name: Login to GitHub Packages Docker Registry
      uses: docker/login-action@ab80d026d4753220c4243394c07c7d80f9638d06 # Use commit-sha1 instead of tag for security concerns
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and possibly push
      env:
        EARTHLY_PUSH: "${{ github.ref == 'refs/heads/main' }}"
      run: |
        ./earthlyw config global.local_registry_host 'tcp://127.0.0.1:8371'
        ./earthlyw --ci --build-arg IMAGE_TAG="${IMAGE_TAG}" --build-arg BASEIMAGE="${BASEIMAGE}" +docker
    outputs:
      image: "${{ steps.set-image-tag.outputs.image }}"
  deploy-topics:
    name: Deploy Topic collector
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        cluster:
          - dev-gcp
          - prod-gcp
    steps:
      - uses: "actions/checkout@v2"
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy topic collector
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: nais/dataproduct-apps-topics.yaml,nais/network-policy-apiserver-topics.yaml
          VAR: image=${{ needs.build.outputs.image }},clusterName=prod-gcp
  deploy-collector:
    name: Deploy Collector
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        cluster:
          - dev-gcp
          - dev-fss
          - dev-sbs
          - prod-gcp
          - prod-sbs
          - prod-fss
    steps:
      - uses: "actions/checkout@v2"
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy to ${{ matrix.cluster }}
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: nais/dataproduct-apps-collect.yaml,nais/network-policy-apiserver-collect.yaml,nais/alert-collect.yaml
          VAR: image=${{ needs.build.outputs.image }},clusterName=${{ matrix.cluster }}
  deploy-other:
    name: Deploy Persistor and Topic
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: "actions/checkout@v2"
      - uses: nais/deploy/actions/deploy@v1
        name: Deploy topic and persist application to prod-gcp
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/topic.yaml,nais/dataproduct-apps-persist.yaml,nais/alert-persist.yaml
          VAR: image=${{ needs.build.outputs.image }},clusterName=prod-gcp
